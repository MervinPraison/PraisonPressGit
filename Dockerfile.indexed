# Multi-Stage Dockerfile with Content Indexing for Large Directories
# This example shows how to build indexes for 100K+ files during image build

# Stage 1: Clone content from separate repository
FROM alpine/git AS content-fetcher
ARG CONTENT_REPO_URL=https://github.com/your-org/content-repo.git
ARG CONTENT_BRANCH=main
WORKDIR /tmp
RUN git clone --depth 1 --branch ${CONTENT_BRANCH} ${CONTENT_REPO_URL} content

# Stage 2: Build indexes for all content directories
FROM php:8.2-cli AS indexer

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy content from stage 1
COPY --from=content-fetcher /tmp/content /content

# Copy index builder script
COPY scripts/build-index.php /scripts/build-index.php
RUN chmod +x /scripts/build-index.php

# Build indexes for each post type directory
RUN echo "Building indexes..." && \
    for dir in /content/*/; do \
        if [ -d "$dir" ] && [ "$(basename "$dir")" != "config" ]; then \
            echo "Indexing $(basename "$dir")..."; \
            php /scripts/build-index.php "$dir" "$(basename "$dir")" || true; \
        fi \
    done && \
    echo "Index build complete!"

# Stage 3: Final WordPress image with indexed content
FROM wordpress:latest

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    less \
    && rm -rf /var/lib/apt/lists/*

# Copy plugin
COPY . /var/www/html/wp-content/plugins/praisonpressgit

# Copy indexed content from stage 2
COPY --from=indexer /content /var/www/html/content

# Set proper permissions
RUN chown -R www-data:www-data /var/www/html/content && \
    chown -R www-data:www-data /var/www/html/wp-content/plugins/praisonpressgit

# Verify indexes were created
RUN echo "Verifying indexes..." && \
    find /var/www/html/content -name "_index.json" -exec ls -lh {} \; && \
    echo "Indexes verified!"

WORKDIR /var/www/html

EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s \
    CMD curl -f http://localhost/ || exit 1
